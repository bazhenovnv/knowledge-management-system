"""
SQL Server Tunnel - –¥–µ–ª–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–π SQL Server –¥–æ—Å—Ç—É–ø–Ω—ã–º –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
–ó–∞–ø—É—Å–∫–∞–π —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ, –≥–¥–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω SQL Server
"""

import socket
import threading
import time
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
LOCAL_SQL_HOST = '127.0.0.1'  # –¢–≤–æ–π –ª–æ–∫–∞–ª—å–Ω—ã–π SQL Server
LOCAL_SQL_PORT = 1433          # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ—Ä—Ç SQL Server
TUNNEL_PORT = 5001             # –ü–æ—Ä—Ç –¥–ª—è —Ç—É–Ω–Ω–µ–ª—è (–æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç Flask 5000)

class SQLServerTunnel:
    def __init__(self):
        self.server = None
        self.running = False
        
    def log(self, message):
        """–í—ã–≤–æ–¥ –ª–æ–≥–æ–≤ —Å –≤—Ä–µ–º–µ–Ω–µ–º"""
        timestamp = datetime.now().strftime('%H:%M:%S')
        print(f"[{timestamp}] {message}")
    
    def handle_client(self, client_socket, addr):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞"""
        self.log(f"–ù–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç {addr}")
        
        try:
            # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ª–æ–∫–∞–ª—å–Ω–æ–º—É SQL Server
            sql_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            sql_socket.connect((LOCAL_SQL_HOST, LOCAL_SQL_PORT))
            self.log(f"–ü–æ–¥–∫–ª—é—á–µ–Ω –∫ SQL Server {LOCAL_SQL_HOST}:{LOCAL_SQL_PORT}")
            
            # –ü—Ä–æ–∫—Å–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –æ–±–µ —Å—Ç–æ—Ä–æ–Ω—ã
            def forward(source, destination, direction):
                try:
                    while True:
                        data = source.recv(4096)
                        if not data:
                            break
                        destination.sendall(data)
                except Exception as e:
                    self.log(f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ ({direction}): {e}")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫–∏ –¥–ª—è –¥–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω–µ–π –ø–µ—Ä–µ—Å—ã–ª–∫–∏
            client_to_sql = threading.Thread(
                target=forward, 
                args=(client_socket, sql_socket, "client->sql")
            )
            sql_to_client = threading.Thread(
                target=forward, 
                args=(sql_socket, client_socket, "sql->client")
            )
            
            client_to_sql.start()
            sql_to_client.start()
            
            client_to_sql.join()
            sql_to_client.join()
            
        except Exception as e:
            self.log(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞: {e}")
        finally:
            client_socket.close()
            if 'sql_socket' in locals():
                sql_socket.close()
            self.log(f"–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å {addr} –∑–∞–∫—Ä—ã—Ç–æ")
    
    def start(self):
        """–ó–∞–ø—É—Å–∫ —Ç—É–Ω–Ω–µ–ª—è"""
        try:
            self.server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            self.server.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
            self.server.bind(('0.0.0.0', TUNNEL_PORT))
            self.server.listen(5)
            self.running = True
            
            print("=" * 60)
            print("üöÄ SQL Server Tunnel –∑–∞–ø—É—â–µ–Ω!")
            print("=" * 60)
            print(f"–õ–æ–∫–∞–ª—å–Ω—ã–π SQL Server: {LOCAL_SQL_HOST}:{LOCAL_SQL_PORT}")
            print(f"–¢—É–Ω–Ω–µ–ª—å —Å–ª—É—à–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É: {TUNNEL_PORT}")
            print("")
            print("–í–ê–ñ–ù–û: –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π:")
            print("  1. ngrok: ngrok tcp 5001")
            print("  2. Cloudflare Tunnel: cloudflared tunnel --url tcp://localhost:5001")
            print("")
            print("–ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ ngrok/cloudflare –ø–æ–ª—É—á–∏—à—å –∞–¥—Ä–µ—Å –≤–∏–¥–∞:")
            print("  tcp://0.tcp.ngrok.io:12345")
            print("=" * 60)
            print("")
            
            while self.running:
                try:
                    client_socket, addr = self.server.accept()
                    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
                    client_thread = threading.Thread(
                        target=self.handle_client,
                        args=(client_socket, addr)
                    )
                    client_thread.daemon = True
                    client_thread.start()
                except Exception as e:
                    if self.running:
                        self.log(f"–û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
        
        except Exception as e:
            print(f"–û–®–ò–ë–ö–ê –∑–∞–ø—É—Å–∫–∞ —Ç—É–Ω–Ω–µ–ª—è: {e}")
        finally:
            self.stop()
    
    def stop(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç—É–Ω–Ω–µ–ª—è"""
        self.running = False
        if self.server:
            self.server.close()
        self.log("–¢—É–Ω–Ω–µ–ª—å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

if __name__ == '__main__':
    tunnel = SQLServerTunnel()
    
    try:
        tunnel.start()
    except KeyboardInterrupt:
        print("\n\n–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Ç—É–Ω–Ω–µ–ª—å...")
        tunnel.stop()
